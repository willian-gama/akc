name: android_ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "develop" , "main" ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  API_KEY: ${{ secrets.API_KEY }}
  GPR_USERNAME: ${{ secrets.GPR_USERNAME }}
  GPR_KEY: ${{ secrets.GPR_KEY }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  code_linting:
    runs-on: ubuntu-latest
    steps:
      - name: checkout project sources
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: set up jdk 20
        uses: actions/setup-java@v4
        with:
          distribution: zulu # Supported distributions: https://github.com/actions/setup-java#supported-distributions
          java-version: 20

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: create local.properties from secret variables
        run: scripts/generate_local_properties.sh

      # KtLint
      - name: run ktlintCheck
        run: ./gradlew ktlintCheck

      - name: archive ktLint reports on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: code_linting
          path: "**/build/reports/ktlint/**/*.html"

      # Detekt
      - name: run detekt
        run: ./gradlew detekt
        if: success() || failure()

      - name: archive detekt reports on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: code_linting
          path: "**/build/reports/detekt/*.html"

  unit_tests:
    # needs: code_linting
    runs-on: ubuntu-latest
    steps:
      - name: checkout project sources
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: set up jdk 20
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 20

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: create local.properties from secret variables
        run: scripts/generate_local_properties.sh

      # Run unit tests: https://developer.android.com/studio/test/command-line#run-tests-build-variants
      - name: run unit tests
        run: ./gradlew testDebugUnitTest

      - name: archive unit tests on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit_tests
          path: "**/build/reports/tests/testDebugUnitTest"

  screenshot_tests:
    # needs: code_linting
    runs-on: ubuntu-latest
    steps:
      - name: checkout project sources
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: set up jdk 20
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '20'

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: create local.properties from secret variables
        run: scripts/generate_local_properties.sh

      # Run unit tests: https://developer.android.com/studio/test/command-line#run-tests-build-variants
      - name: run screenshot tests
        run: ./gradlew verifyPaparazziDebug

      - name: archive unit tests on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: unit_tests
          path: "**/build/reports/paparazzi"

  ui_tests:
    # needs: code_linting
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [ 31 ]
        profile: [ pixel_3a_xl ]
        arch: [ x86_64 ]
    steps:
      - name: checkout project sources
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: set up jdk 20
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 20

      - name: create local.properties from secret variables
        run: scripts/generate_local_properties.sh

      - name: setup gradle
        uses: gradle/actions/setup-gradle@v4

      - name: avd cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.profile }}-${{ matrix.arch }}

      - name: create avd and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          profile: ${{ matrix.profile }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run ui tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          profile: ${{ matrix.profile }}
          arch: ${{ matrix.arch }}
          force-avd-creation: false
          emulator-options: -no-audio -no-boot-anim -no-window -no-snapshot-save -verbose -wipe-data -gpu swiftshader_indirect # Emulator options reference: https://developer.android.com/studio/run/emulator-commandline
          disable-animations: true
          script: ./gradlew connectedDebugAndroidTest # Run ui tests: https://developer.android.com/studio/test/command-line#run-tests-build-variants

      - name: archive ui test reports on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: ui_tests
          path: "**/build/reports/androidTests/connected"
